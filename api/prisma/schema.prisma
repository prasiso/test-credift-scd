generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model entries {
  id_entrie           Int                   @id(map: "entries_pk") @default(autoincrement())
  entrie              String                @unique(map: "entries_unique") @db.VarChar
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  entries_fav         entries_fav[]
  history_read_entrie history_read_entrie[]
}

model entries_fav {
  id_entries_fav Int      @id(map: "entries_fav_pk") @default(autoincrement())
  id_user        Int
  id_entrie      Int
  created_at     DateTime @default(now()) @db.Timestamp(6)
  entries        entries  @relation(fields: [id_entrie], references: [id_entrie], onDelete: NoAction, onUpdate: NoAction, map: "fk_entries_user")
  user           user     @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_entries")
}

model user {
  id_user             Int                   @id(map: "user_pk") @default(autoincrement())
  name                String                @db.VarChar
  password            String                @db.VarChar
  email               String                @unique(map: "user_unique") @db.VarChar
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  entries_fav         entries_fav[]
  history_read_entrie history_read_entrie[]
}

model history_read_entrie {
  id_history_read_entrie Int       @id @default(autoincrement())
  id_user                Int
  id_entrie              Int
  created_at             DateTime? @default(now()) @db.Timestamp(6)
  entries                entries   @relation(fields: [id_entrie], references: [id_entrie], onDelete: NoAction, onUpdate: NoAction)
  user                   user      @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction)
}
